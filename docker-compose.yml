# Docker Compose file for Vapor
#
# Install Docker on your system to run and test
# your Vapor app in a production-like environment.
#
# Note: This file is intended for testing and does not
# implement best practices for a production deployment.
#
# Learn more: https://docs.docker.com/compose/reference/
#
#   Build images: docker-compose build
#      Start app: docker-compose up app
#       Stop all: docker-compose down
#

volumes:
  db_data:

x-shared_environment: &shared_environment
  LOG_LEVEL: ${LOG_LEVEL:-debug}
  
services:
  app:
    image: vapor-demo:latest
    # volumes:
    #  # Unix socket
    #  - ${DATABASE_SOCKET_PATH}:/var/run/postgresql
    build:
      context: .
    env_file:
      - .env
    environment:
      <<: *shared_environment
      DATABASE_HOST: db
    depends_on:
      - db
    ports:
      - '8080:8080'
    # user: '0' # uncomment to run as root for testing purposes even though Dockerfile defines 'vapor' user.
    command: ["serve", "--env", "production", "--hostname", "0.0.0.0", "--port", "8080"]
  db:
    image: postgres:16-alpine
    volumes:
      - db_data:${PGDATA}
      # Unix socket
      # - ${DATABASE_SOCKET_PATH}:/var/run/postgresql
    env_file:
      - .env
    ports:
      - '${DATABASE_PORT}:${DATABASE_PORT}'
